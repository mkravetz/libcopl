.\" This manpage is Copyright (C) 2009, 2010 IBM
.\" Written by Tom Gall <tom_gall@vnet.ibm.com>
.\"            Mike Kravetz <kravetz@us.ibm.com>
.\"
.TH COP_RAND 2010-06-30 "Libcop" "Libcop Programmer's Manual"
.SH NAME
cop_rand \- random coprocessor functions
.SH SYNOPSIS
.nf
.sp
.I random/seed functions:
.P
.B #include <libcop.h>
.P
int cop_rand();

long cop_random();

cop_session *cop_create_random_session(int mode);

long cop_get_rnd(cop_session *session);

.SH DESCRIPTION
.SS functions
.P
.B cop_rand, cop_random
.P
return either a 32 bit or 64 bit random value. It is recommended
these values are used as a seed for a pseudo random number generated.

No memory from the specially mapped memory pools is needed for these functions.
.P
.RE

.SH DESCRIPTION
.SS functions
.P
.B cop_create_random_session
.P
Creates a session to be associated with a coprocessor call to obtain a random
number.
.P
parameters:
.P
.RS
.I int mode
.P This flag can be ASYNC_INTERRUPT or COMPLETION_STORE
COMPLETION_STORE means the user of this function must check the valid bit in the CSB
ASYNC_INTERRUPT means notification of completion will be sent via an interrupt which is 
caught via epoll.

.SH DESCRIPTION
.SS function
.P
.B cop_get_rnd
.P
Functions returns the random number from a session that has completed.
.P
parameters:
.P
.RS
.P
.I cop_session *session
.P Pointer to session that has completed.


.SH SEE ALSO
libcop(3)
cop_session(3)
